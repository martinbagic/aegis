#!/usr/bin/env python

# Import libraries and define arguments
import argparse,os,sys,warnings
# import pyximport; pyximport.install()
# ignore pandas warnings, but also all FutureWarning
# TODO: handle this better
warnings.simplefilter(action='ignore', category=FutureWarning)
import aegis

parser = argparse.ArgumentParser(description='Run the genome ageing simulation.',\
        formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument('script', help="AEGIS script to run:\n\
    run - run the simulation with the config file specified in\n\
          infile\n\
    plot - plot data from record object specified in infile\n\
    getconfig - copies the default config file to infile")
parser.add_argument('infile', help="path to input config file")
parser.add_argument('-m', '--module', metavar='<str>', default="Core",
        help="AEGIS module to use for simulation run (default: 'Core')")
parser.add_argument('-v', '--verbose', action="store_true",
        help="display full information at each report stage\n\
    (default: only starting population)")
parser.add_argument('-r', type=int, metavar="<int>", default=100,
        help="report information every <int> stages (default: 100)")
parser.add_argument('-p', '--profile', metavar='<str>', default="",
        help="profile genome simulation with cProfile and save to given path")
args = parser.parse_args()

if args.profile != "":
    import cProfile, pstats, StringIO
    pr = cProfile.Profile()
    pr.enable() # start profiling

module = getattr(aegis, args.module)
inpath = os.path.expanduser(args.infile)

if args.script == "run":
    module.run(inpath, args.r, args.verbose)

elif args.script == "getconfig":
    module.getconfig(inpath)

elif args.script == "plot":
    module.plot(inpath)

if args.profile != "":
    pr.create_stats()
    pr.dump_stats(args.profile)
